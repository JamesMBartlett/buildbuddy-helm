## Default values for BuildBuddy Enterprise.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## The BuildBuddy Executor container image to use.
image:
  repository: gcr.io/flame-public/buildbuddy-executor-enterprise
  tag: server-image-enterprise-v1.5.3
  imagePullPolicy: IfNotPresent

## The number of executor replicas to run.
replicas: 3

## The name of the executor pool for this deployment.
# poolName: high-memory-pool

## The default resources to give the app.
resources:
  limits:
    cpu: "2"
    memory: "10Gi"
  requests:
    cpu: "1"
    memory: "5Gi"

## Enables disk storage using Persistent Volume Claims.
## You'll also need to specify a disk block in the config cache and/or storage blocks below.
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
## ref: https://docs.gitlab.com/ee/install/requirements.html#storage
disk:
  ## This volume persists build events, cache artifacts, etc. when BuildBuddy is
  ## configured to use disk storage. To use this disk in your config, make sure
  ## your root_directory options begin with with /data/.
  data:
    enabled: true
    size: 10Gi
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    accessMode: ReadWriteOnce
  # existingClaim: ""

## Configures what port the BuildBuddy executors operate on.
service:
  internalHTTPPort: 8080
  internalGRPCPort: 1985

# NOTE: These acts as the default values for the config.yaml file read by the
# buildbuddy server itself. You can override the config object just like any
# Helm template value. Since it is an object, the object you provide will merge
# with these defaults.
config:
  executor:
    # app_target: "grpcs://your.buildbuddy.install:443" # auto populated if deploying via buildbuddy-enterprise chart
    root_directory: "/buildbuddy/remotebuilds/"
    local_cache_directory: "/buildbuddy/filecache/"
    local_cache_size_bytes: 5000000000 # 5GB
    docker_socket: /var/run/docker.sock
  # auth:
  #   enable_anonymous_usage: true
  #   oauth_providers:
  #     - issuer_url: "https://accounts.google.com"
  #       client_id: "myclient.apps.googleusercontent.com"
  #       client_secret: "mysecret"
  # cache:
  #   redis_target: "my-release-redis-master:6379"
  #   gcs:
  #     bucket: "buildbuddy_cache_bucket"
  #     project_id: "myprojectid"
  #     credentials_file: "mycredentials.json"
  #     ttl_days: 30

## Additional env vars
extraEnvVars: []

## Additional init containers
extraInitContainers: []

# Add additional volumes and mounts
extraVolumes: []
extraVolumeMounts: []
